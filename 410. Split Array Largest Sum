class Solution {
public:
    bool isPossible(vector<int>& nums, int n, int m, int mid) {
        int pageSum = 0, studentCount = 1;
        for (int i = 0; i < n; i++) {
            if (nums[i] > mid) {
                return false;
            }
            if (pageSum + nums[i] <= mid) {
                pageSum += nums[i];
            } else {
                studentCount++;
                if (studentCount > m) {
                    return false;
                }
                pageSum = nums[i];
            }
        }
        return true;
    }
    int splitArray(vector<int>& nums, int m) {
        int n = nums.size();
        if (m > n)
            return -1;
        int st = 0, end, sum = 0, ans = -1, mid;
        for (int i = 0; i < n; i++) {
            sum += nums[i];
        }
        end = sum;
        while (st <= end) {
            mid = st + (end - st) / 2;
            if (isPossible(nums, n, m, mid)) {
                ans = mida, end = mid - 1;
            } else {
                st = mid + 1;
            }
        }
        return ans;
    }
};
